@use "../variables/typography.scss" as typographyVariables;

@mixin font-size($fs-map, $fs-breakpoints: typographyVariables.$fs-breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    } @else if $fs-breakpoint != lang {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      $fs-min-width: map-get($fs-breakpoint, minWidth);
      @media screen and (min-width: $fs-min-width) {
        @include make-font-size($fs-font-size);
      }
    }
  }
  @if map-has-key($fs-map, lang) {
    $fs-langs: map-get($fs-map, lang);
    @each $fs-lang, $fs-map in $fs-langs {
      @include getLang($fs-lang) {
        @include font-size($fs-map);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
    @if (length($fs-font-size) > 2) {
      letter-spacing: nth($fs-font-size, 3);
    }
  } @else {
    font-size: $fs-font-size;
  }
}

@mixin hyphenate {
  word-wrap: break-word; // this property is used as fallback. It has been replaced by overflow-wrap in modern browsers https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap
  overflow-wrap: break-word;
  hyphens: auto;
}

@mixin dehyphenate {
  word-wrap: initial;
  overflow-wrap: initial;
  hyphens: initial;
}